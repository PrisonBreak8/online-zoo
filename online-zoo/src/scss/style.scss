@use "sass:math";

// Подключение миксинов ===========================================================================================================================================================================================================================================================================
@import "base/mixins";

// Подключение шрифтов ===========================================================================================================================================================================================================================================================================
//&display=swap - добавить при подключении через плагин
// Подключить если есть локальные файлы шрифтов
@import "fonts/fonts";

// Подключение иконочных шрифтов ==============================================================================================================================================================================================================================================================================
// Подключить если есть файл иконочного шрифта
@import "fonts/icons";

// Шрифт по умолчанию ==============================================================================================================================================================================================================================================================================
$fontFamily: "Roboto", sans-serif;
$fontSize: rem(16); // где 14(px) - размер шрифта по умолчанию из макета

// Основные цвета
$mainColor: #fff; // Цвет шрифта по умолчанию
$black: #000;
$bgHeader: #000000ff;
$bgFooter: #111115ff;

$green: #4b9200;
$orange: #f9804b;
$yellow: #ffee2e;
$red: #d31414;

$blackBlue: #333b41;
$gray: #767474;
$graySmoky: #767474;
$lightGray: #f1f3f2;
$frostedGlassWhite: #fdfdff;

// Градиенты
$orangeGradient: linear-gradient(113.96deg, #f9804b 1.49%, #fe9013 101.44%);

$pinkGradient: linear-gradient(
		315.75deg,
		rgba(254, 189, 171, 0.74) 30.06%,
		rgba(243, 169, 248, 0.66) 50.74%,
		#e0d8f0 80.49%,
		#eaf7fe 127.9%,
		#eaf7fe 149.54%
	),
	linear-gradient(
		315.75deg,
		rgba(254, 189, 171, 0.74) 30.06%,
		rgba(243, 169, 248, 0.66) 50.74%,
		#e0d8f0 80.49%,
		#eaf7fe 127.9%,
		#eaf7fe 149.54%
	);
$orangeGradientGrad: linear-gradient(
		315.75deg,
		rgba(254, 210, 144, 0.7) 30.06%,
		#febdab 100.95%,
		rgba(254, 210, 144, 0.7) 106.36%
	),
	linear-gradient(
		315.75deg,
		rgba(254, 189, 171, 0.74) 30.06%,
		rgba(243, 169, 248, 0.66) 50.74%,
		#e0d8f0 80.49%,
		#eaf7fe 127.9%,
		#eaf7fe 149.54%
	),
	linear-gradient(
		315.75deg,
		rgba(254, 189, 171, 0.74) 30.06%,
		rgba(243, 169, 248, 0.66) 50.74%,
		#e0d8f0 80.49%,
		#eaf7fe 127.9%,
		#eaf7fe 149.54%
	);

// НАСТРОЙКИ ===============================================================================================================================================================================================================================================================================================
// Минимальная ширина страницы
$minWidth: 320;
// Ширина полотна (макета)
$maxWidth: 1600;
// Ширина ограничивающего контейнера (0 = нет ограничения)
$maxWidthContainer: 1160;
// Общий отступ у контейнера
// (30 = по 15px слева и справа, 0 = нет отступа)
$containerPadding: 30;

// Тип адаптива:
// 1 = отзывчивость (у контейнера нет брейкпоинтов),
// 2 = по брейк-поинтам (контейнер меняет свою ширину по брейк-поинтам)
$responsiveType: 1;

// Ширина страбатывания первого брейкпоинта
$containerWidth: $maxWidthContainer + $containerPadding;

// Брейк-поинты
$pc: em($containerWidth); // ПК, ноутбуки, некоторые планшеты в горизонтальном положении
$smalldesctop: em(1000.98); // Планшеты, некоторые телефоны в горизонтальном положении

$tablet: em(998.98); // Планшеты, некоторые телефоны в горизонтальном положении
$mobile: em(767.98); // Телефоны L
//$mobileSmall: em(600.98);
$mobileSmall: em(479.98); // Телефоны S

// Обнуление и общие параметры ============================================================================================================================================================================================== =============================================================================================== ===============================================================================================
@import "base/null";

body {
	font-weight: 300;
	color: $mainColor;
	// Скролл заблокированmd3
	.lock & {
		overflow: hidden;
		touch-action: none;
	}
	// Сайт загружен
	.loaded & {
	}
}
// Оболочка ============================================================================================================================================================================================================================================================================================================================================================================================================================================
.wrapper {
	min-height: 100%;
	display: flex;
	flex-direction: column;
	overflow: hidden;
	// Прижимаем footer
	> main {
		flex: 1 1 auto;
	}
	// Фикс для слайдеров
	> * {
		min-width: 0;
	}
}

// Ограничивающий контейнер ======================================================================================================================================================================================================================

/*
(i) Стили будут применяться ко 
всем классам содержащим *__container
Например header__container, main__container и т.д.
Снипет (HTML): cnt
*/
@if ($responsiveType==1) {
	// Отзывчивая
	[class*="__container"] {
		@if ($maxWidthContainer>0) {
			max-width: rem($maxWidthContainer);
			box-sizing: content-box;
			margin: 0 auto;
			@media (max-width: em(1001.98)) {
				padding-right: rem(30);
				padding-left: rem(30);
			}
			@media (max-width: em(767.98)) {
				padding-right: rem(20);
				padding-left: rem(20);
			}
			@media (max-width: $mobileSmall) {
				padding-right: rem(10);
				padding-left: rem(10);
			}
		}
		@if ($containerPadding>0) {
			padding: 0 rem(math.div($containerPadding, 2));
		}
	}
} @else {
	// По брейк-поинтам
	[class*="__container"] {
		margin: 0 auto;
		@if ($maxWidthContainer>0) {
			max-width: rem($maxWidthContainer);
			box-sizing: content-box;
		} @else {
			@if ($containerPadding>0) {
				padding: 0 rem(math.div($containerPadding, 2));
			}
		}
		@media (max-width: $pc) {
			max-width: rem(970);
		}
		@media (max-width: $tablet) {
			max-width: rem(750);
		}
		@media (max-width: $mobile) {
			max-width: none;
			@if ($containerPadding>0 and $maxWidthContainer>0) {
				padding: 0 rem(math.div($containerPadding, 2));
			}
		}
	}
}

// Подключение базовых стилей, шаблонов (заготовок) и вспомагательных классов
// Для подключения/отключения конкретных стилей смотри base.scss
@import "base";

// Подключение стилей общих элементов проекта
@import "common";

// Подключение стилей отдельных блоков
@import "header";
@import "footer";
@import "donate";

// Подключение стилей отдельных страниц
@import "home";
// Подключение стилей отдельных страниц
@import "map";
// Подключение стилей отдельных страниц
@import "zoos";
